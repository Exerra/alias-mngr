#!/usr/bin/env bun
// @bun
import Se from"yargs";import{hideBin as de}from"yargs/helpers";import{intro as ue}from"@clack/prompts";import $ from"chalk";import{join as w}from"node:path";import{homedir as h,platform as ee}from"node:os";import{join as v}from"node:path";var m=()=>{let a=ee();if(a=="darwin"||a=="linux"){let r=h()||process.env.HOME||`/home/${process.env.USER}`,s="/.alias-manager-exerra";return v(r,"/.alias-manager-exerra")}if(a=="win32"){let r=process.env.LOCALAPPDATA;return v(r,"alias-manager-exerra")}else return null};import E from"node:fs";import{existsSync as C,mkdirSync as re}from"node:fs";import{confirm as ie,log as N}from"@clack/prompts";var M=(a)=>{a.command("add [name] [command]","Add a new alias",(r)=>{return r.positional("name",{describe:"Name of the alias"}).positional("command",{describe:"Command that the alias will run"})},async(r)=>{let{name:s,command:e}=r,i=m();if(!i)return N.error("Invalid OS.");if(!C(i))re(i);if(!C(w(i,"aliases.json")))E.writeFileSync(w(i,"aliases.json"),JSON.stringify([]));let o=JSON.parse(E.readFileSync(w(i,"aliases.json"),"utf-8")),n=!1;for(let t of o)if(t.name==s)n=!0;if(n)return N.error("Alias with the same name already exists! Aborting...");if(r._.length>1){console.log(r);let t=r._.filter((p)=>p!="add").join(" ");e=e+" "+t}let c=await ie({message:`Looks good? Name: ${s}, command: ${e}`});if(!c)return N.error("Aborting!");if(typeof c=="symbol"){if(c.description=="clack:cancel")return N.error("Aborting!")}return o.push({name:s,cmd:e,enabled:!0}),E.writeFileSync(w(i,"aliases.json"),JSON.stringify(o)),N.success("Added alias! It is enabled by default.")})};import{exec as se}from"node:child_process";import d from"fs";import{existsSync as J,mkdirSync as U}from"node:fs";import{homedir as q,platform as oe}from"node:os";import{promisify as ne}from"node:util";import{join as l}from"node:path";import{log as b}from"@clack/prompts";var ae=ne(se),z=(a)=>{a.command("link","Links/binds aliases to the shell. Must be run after adding/removing aliases in order to use them.",async(r)=>{let s=oe(),e=m();if(!e)return b.error("Invalid OS.");if(!J(e))U(e);if(!J(l(e,"aliases.json")))d.writeFileSync(l(e,"aliases.json"),JSON.stringify([]));let o=JSON.parse(d.readFileSync(l(e,"aliases.json"),"utf-8")).filter((n)=>n.enabled==!0);if(b.step(`Loading ${o.length} aliases.`),s=="darwin"||s=="linux"){let n=q()||process.env.HOME||`/home/${process.env.USER}`,c=process.env.SHELL,t="";for(let{name:Y,cmd:O}of o)t+=`alias ${Y}="${O.replaceAll('"',"\\\"")}"
`;d.writeFileSync(l(e,"aliases.sh"),t);let p="source "+l(e,"aliases.sh"),A="",j=!0;if(c.includes("bash"))A=".bashrc";else if(c.includes("zsh"))A=".zshrc";else j=!1;if(!j)return b.error(`Shell not supported yet. Add this manually to your ~/.<shell>rc file:

`+p);let S=d.readFileSync(l(n,A),"utf-8");if(S.includes(p))return b.success("Done! Restart your shell for the changes to take effect!");return S+=`

`+p+`
`,d.writeFileSync(l(n,A),S),b.success("Done! Restart your shell for the changes to take effect!")}if(s=="win32"){let n=q()||process.env.USERPROFILE,c="";for(let{name:u,cmd:P}of o)c+=`function ${u} { ${P} }
`;d.writeFileSync(l(e,"aliases.ps1"),c);let{stdout:t,stderr:p}=await ae('powershell.exe -Command "$PROFILE"');t=t.replace("\r","").replace(`
`,"");let j=t.replace(n,"").split("\\"),S=n;for(let u of j){if(u=="")continue;if(u.replace("\r","").replace(`
`,"").endsWith(".ps1"))continue;if(!J(l(S,u)))U(l(S,u));S=l(S,u)}let Y=J(t),O="";if(Y)O=d.readFileSync(t,"utf-8");return O+=`

. ${l(e,"aliases.ps1")}
`,d.writeFileSync(t,O),b.success("Done! Restart your shell for the changes to take effect!")}})};import{join as F}from"node:path";import g from"node:fs";import{existsSync as G,mkdirSync as te}from"node:fs";import{log as H}from"@clack/prompts";var K=(a)=>{a.command("remove [name]","Remove an alias by name",(r)=>{return r.positional("name",{describe:"Name of the alias"})},(r)=>{let{name:s}=r,e=m();if(!e)return H.error("Invalid OS.");if(!G(e))te(e);if(!G(F(e,"aliases.json")))g.writeFileSync(F(e,"aliases.json"),JSON.stringify([]));let o=JSON.parse(g.readFileSync(F(e,"aliases.json"),"utf-8")).filter((n)=>n.name!=s);return g.writeFileSync(F(e,"aliases.json"),JSON.stringify(o)),H.success("Removed alias!")})};import{join as D}from"node:path";import Q from"node:fs";import{existsSync as V,mkdirSync as me}from"node:fs";import le from"cli-table";import{log as W}from"@clack/prompts";var X=(a)=>{a.command("list","List all aliases",(r)=>{return r},(r)=>{let s=m();if(!s)return W.error("Invalid OS.");if(!V(s))me(s);if(!V(D(s,"aliases.json")))Q.writeFileSync(D(s,"aliases.json"),JSON.stringify([]));let e=JSON.parse(Q.readFileSync(D(s,"aliases.json"),"utf-8")),i=new le({head:["Name","Command","Enabled?"]});for(let o of e)i.push([o.name,o.cmd,o.enabled?"Yes":"No"]);return W.success(i.toString())})};import{join as x}from"node:path";import I from"node:fs";import{existsSync as Z,mkdirSync as fe}from"node:fs";import{log as L}from"@clack/prompts";var _=(a)=>{a.command("enable [name] [command]","Enable an alias",(r)=>{return r.positional("name",{describe:"Name of the alias"})},(r)=>{let{name:s}=r,e=m();if(!e)return L.error("Invalid OS.");if(!Z(e))fe(e);if(!Z(x(e,"aliases.json")))I.writeFileSync(x(e,"aliases.json"),JSON.stringify([]));let i=JSON.parse(I.readFileSync(x(e,"aliases.json"),"utf-8")),o=-1;for(let n in i)if(i[n].name==s)o=parseInt(n);if(o==-1)return L.error("Alias could not be found. Aborting...");return i[o].enabled=!0,I.writeFileSync(x(e,"aliases.json"),JSON.stringify(i)),L.success("Enabled alias!")})};import{join as y}from"node:path";import T from"node:fs";import{existsSync as B,mkdirSync as ce}from"node:fs";import{log as R}from"@clack/prompts";var k=(a)=>{a.command("disable [name] [command]","Disable an alias",(r)=>{return r.positional("name",{describe:"Name of the alias"})},(r)=>{let{name:s}=r,e=m();if(!e)return R.error("Invalid OS.");if(!B(e))ce(e);if(!B(y(e,"aliases.json")))T.writeFileSync(y(e,"aliases.json"),JSON.stringify([]));let i=JSON.parse(T.readFileSync(y(e,"aliases.json"),"utf-8")),o=-1;for(let n in i)if(i[n].name==s)o=parseInt(n);if(o==-1)return R.error("Alias could not be found. Aborting...");return i[o].enabled=!1,T.writeFileSync(y(e,"aliases.json"),JSON.stringify(i)),R.success("Disabled alias!")})};var pe="0.0.3";ue(`${$.bold.green("alias-mngr")} ${$.gray("(v"+pe+")")} by ${$.bold("Exerra")}`);var f=Se(de(process.argv));f.demandCommand();M(f);K(f);z(f);X(f);_(f);k(f);f.scriptName("alias-mngr");f.example('$0 add v "open \\$1 -a \\"Visual Studio Code\\""',"");f.help("h");f.alias("h","help");f.parse();
