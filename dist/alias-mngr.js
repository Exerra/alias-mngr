#!/usr/bin/env node
import br from"yargs";import{hideBin as ur}from"yargs/helpers";import{intro as Or}from"@clack/prompts";import H from"chalk";import{join as Y}from"node:path";import{homedir as g,platform as rr}from"node:os";import{join as K}from"node:path";var o=()=>{let n=rr();if(n=="darwin"||n=="linux"){let s=g()||process.env.HOME||`/home/${process.env.USER}`,t="/.alias-manager-exerra";return K(s,"/.alias-manager-exerra")}if(n=="win32"){let s=process.env.LOCALAPPDATA;return K(s,"alias-manager-exerra")}else return null};import I from"node:fs";import{existsSync as M,mkdirSync as sr}from"node:fs";import{confirm as er,log as p}from"@clack/prompts";var Q=(n)=>{n.command("add [name] [command]","Add a new alias",(s)=>{return s.positional("name",{describe:"Name of the alias"}).positional("command",{describe:"Command that the alias will run"})},async(s)=>{let{name:t,command:r}=s,e=o();if(!e)return p.error("Invalid OS.");if(!M(e))sr(e);if(!M(Y(e,"aliases.json")))I.writeFileSync(Y(e,"aliases.json"),JSON.stringify([]));let m=JSON.parse(I.readFileSync(Y(e,"aliases.json"),"utf-8"));for(let S of m)if(S.name==t)return p.error("Alias with the same name already exists! Aborting...");if(s._.length>1){let S=s._.filter((l)=>l!="add").join(" ");r=r+" "+S}let i=await er({message:`Looks good? Name: ${t}, command: ${r}`});if(!i)return p.error("Aborting!");if(typeof i=="symbol"){if(i.description=="clack:cancel")return p.error("Aborting!")}return m.push({name:t,cmd:r,enabled:!0}),I.writeFileSync(Y(e,"aliases.json"),JSON.stringify(m)),p.success("Added alias! It is enabled by default.")})};import{exec as tr}from"node:child_process";import u from"fs";import{existsSync as j,mkdirSync as V}from"node:fs";import{homedir as W,platform as mr}from"node:os";import{promisify as ir}from"node:util";import{join as a}from"node:path";import{log as N}from"@clack/prompts";var nr=ir(tr),X=(n)=>{n.command("link","Links/binds aliases to the shell. Must be run after adding/removing aliases in order to use them.",async(s)=>{let t=mr(),r=o();if(!r)return N.error("Invalid OS.");if(!j(r))V(r);if(!j(a(r,"aliases.json")))u.writeFileSync(a(r,"aliases.json"),JSON.stringify([]));let m=JSON.parse(u.readFileSync(a(r,"aliases.json"),"utf-8")).filter((i)=>i.enabled==!0);if(N.step(`Loading ${m.length} aliases.`),t=="darwin"||t=="linux"){let i=W()||process.env.HOME||`/home/${process.env.USER}`,S=process.env.SHELL,l="";for(let{name:T,cmd:J}of m)l+=`alias ${T}="${J.replaceAll('"',"\\\"")}"
`;u.writeFileSync(a(r,"aliases.sh"),l);let w="source "+a(r,"aliases.sh"),A="",E=!0;if(S.includes("bash"))A=".bashrc";else if(S.includes("zsh"))A=".zshrc";else E=!1;if(!E)return N.error(`Shell not supported yet. Add this manually to your ~/.<shell>rc file:

`+w);let b=u.readFileSync(a(i,A),"utf-8");if(b.includes(w))return N.success("Done! Restart your shell for the changes to take effect!");return b+=`

`+w+`
`,u.writeFileSync(a(i,A),b),N.success("Done! Restart your shell for the changes to take effect!")}if(t=="win32"){let i=W()||process.env.USERPROFILE,S="";for(let{name:O,cmd:h}of m)S+=`function ${O} { ${h} }
`;u.writeFileSync(a(r,"aliases.ps1"),S);let{stdout:l,stderr:w}=await nr('powershell.exe -Command "$PROFILE"');l=l.replace("\r","").replace(`
`,"");let E=l.replace(i,"").split("\\"),b=i;for(let O of E){if(O=="")continue;if(O.replace("\r","").replace(`
`,"").endsWith(".ps1"))continue;if(!j(a(b,O)))V(a(b,O));b=a(b,O)}let T=j(l),J="";if(T)J=u.readFileSync(l,"utf-8");return J+=`

. ${a(r,"aliases.ps1")}
`,u.writeFileSync(l,J),N.success("Done! Restart your shell for the changes to take effect!")}})};import{join as D}from"node:path";import x from"node:fs";import{existsSync as Z,mkdirSync as or}from"node:fs";import{log as B}from"@clack/prompts";var F=(n)=>{n.command("remove [name]","Remove an alias by name",(s)=>{return s.positional("name",{describe:"Name of the alias"})},(s)=>{let{name:t}=s,r=o();if(!r)return B.error("Invalid OS.");if(!Z(r))or(r);if(!Z(D(r,"aliases.json")))x.writeFileSync(D(r,"aliases.json"),JSON.stringify([]));let m=JSON.parse(x.readFileSync(D(r,"aliases.json"),"utf-8")).filter((i)=>i.name!=t);return x.writeFileSync(D(r,"aliases.json"),JSON.stringify(m)),B.success("Removed alias!")})};import{join as U}from"node:path";import _ from"node:fs";import{existsSync as C,mkdirSync as ar}from"node:fs";import fr from"cli-table";import{log as c}from"@clack/prompts";var v=(n)=>{n.command("list","List all aliases",(s)=>{return s},(s)=>{let t=o();if(!t)return c.error("Invalid OS.");if(!C(t))ar(t);if(!C(U(t,"aliases.json")))_.writeFileSync(U(t,"aliases.json"),JSON.stringify([]));let r=JSON.parse(_.readFileSync(U(t,"aliases.json"),"utf-8")),e=new fr({head:["Name","Command","Enabled?"]});for(let m of r)e.push([m.name,m.cmd,m.enabled?"Yes":"No"]);return c.success(e.toString())})};import{join as L}from"node:path";import $ from"node:fs";import{existsSync as k,mkdirSync as Sr}from"node:fs";import{log as q}from"@clack/prompts";var P=(n)=>{n.command("enable [name] [command]","Enable an alias",(s)=>{return s.positional("name",{describe:"Name of the alias"})},(s)=>{let{name:t}=s,r=o();if(!r)return q.error("Invalid OS.");if(!k(r))Sr(r);if(!k(L(r,"aliases.json")))$.writeFileSync(L(r,"aliases.json"),JSON.stringify([]));let e=JSON.parse($.readFileSync(L(r,"aliases.json"),"utf-8")),m=-1;for(let i in e)if(e[i].name==t)m=parseInt(i);if(m==-1)return q.error("Alias could not be found. Aborting...");return e[m].enabled=!0,$.writeFileSync(L(r,"aliases.json"),JSON.stringify(e)),q.success("Enabled alias!")})};import{join as R}from"node:path";import z from"node:fs";import{existsSync as y,mkdirSync as lr}from"node:fs";import{log as G}from"@clack/prompts";var d=(n)=>{n.command("disable [name] [command]","Disable an alias",(s)=>{return s.positional("name",{describe:"Name of the alias"})},(s)=>{let{name:t}=s,r=o();if(!r)return G.error("Invalid OS.");if(!y(r))lr(r);if(!y(R(r,"aliases.json")))z.writeFileSync(R(r,"aliases.json"),JSON.stringify([]));let e=JSON.parse(z.readFileSync(R(r,"aliases.json"),"utf-8")),m=-1;for(let i in e)if(e[i].name==t)m=parseInt(i);if(m==-1)return G.error("Alias could not be found. Aborting...");return e[m].enabled=!1,z.writeFileSync(R(r,"aliases.json"),JSON.stringify(e)),G.success("Disabled alias!")})};var Nr="0.0.3";Or(`${H.bold.green("alias-mngr")} ${H.gray("(v"+Nr+")")} by ${H.bold("Exerra")}`);var f=br(ur(process.argv));f.demandCommand();Q(f);F(f);X(f);v(f);P(f);d(f);f.scriptName("alias-mngr");f.example('$0 add v "open \\$1 -a \\"Visual Studio Code\\""',"");f.help("h");f.alias("h","help");f.parse();
