#!/usr/bin/env node
import Or from"yargs";import{hideBin as lr}from"yargs/helpers";import{intro as Nr}from"@clack/prompts";import K from"chalk";import{join as Y}from"node:path";import{homedir as rr,platform as sr}from"node:os";import{join as M}from"node:path";var o=()=>{let n=sr();if(n=="darwin"||n=="linux"){let s=rr()||process.env.HOME||`/home/${process.env.USER}`,t="/.alias-manager-exerra";return M(s,"/.alias-manager-exerra")}if(n=="win32"){let s=process.env.LOCALAPPDATA;return M(s,"alias-manager-exerra")}else return null};import I from"node:fs";import{existsSync as Q,mkdirSync as er}from"node:fs";import{confirm as tr,log as p}from"@clack/prompts";import x from"chalk";var V=(n)=>{n.command("add [name] [command]","Add a new alias",(s)=>{return s.positional("name",{describe:"Name of the alias"}).positional("command",{describe:"Command that the alias will run"})},async(s)=>{let{name:t,command:r}=s,e=o();if(!e)return p.error("Invalid OS.");if(!Q(e))er(e);if(!Q(Y(e,"aliases.json")))I.writeFileSync(Y(e,"aliases.json"),JSON.stringify([]));let m=JSON.parse(I.readFileSync(Y(e,"aliases.json"),"utf-8"));for(let S of m)if(S.name==t)return p.error("Alias with the same name already exists! Aborting...");if(s._.length>1){let S=s._.filter((b)=>b!="add").join(" ");r=r+" "+S}let i=await tr({message:`Looks good? Name: ${x.gray(t)}, command: ${x.gray(r)}`});if(!i)return p.error("Aborting!");if(typeof i=="symbol"){if(i.description=="clack:cancel")return p.error("Aborting!")}return m.push({name:t,cmd:r,enabled:!0}),I.writeFileSync(Y(e,"aliases.json"),JSON.stringify(m)),p.success(`Added alias! It is enabled by default. Run the following command to activate it - ${x.grey("alias-mngr link")}.`)})};import{exec as mr}from"node:child_process";import O from"fs";import{existsSync as j,mkdirSync as W}from"node:fs";import{homedir as X,platform as ir}from"node:os";import{promisify as nr}from"node:util";import{join as a}from"node:path";import{log as N}from"@clack/prompts";var or=nr(mr),Z=(n)=>{n.command("link","Links/binds aliases to the shell. Must be run after adding/removing aliases in order to use them.",async(s)=>{let t=ir(),r=o();if(!r)return N.error("Invalid OS.");if(!j(r))W(r);if(!j(a(r,"aliases.json")))O.writeFileSync(a(r,"aliases.json"),JSON.stringify([]));let m=JSON.parse(O.readFileSync(a(r,"aliases.json"),"utf-8")).filter((i)=>i.enabled==!0);if(N.step(`Loading ${m.length} aliases.`),t=="darwin"||t=="linux"){let i=X()||process.env.HOME||`/home/${process.env.USER}`,S=process.env.SHELL,b="";for(let{name:T,cmd:J}of m)b+=`alias ${T}="${J.replaceAll('"',"\\\"")}"
`;O.writeFileSync(a(r,"aliases.sh"),b);let w="source "+a(r,"aliases.sh"),A="",E=!0;if(S.includes("bash"))A=".bashrc";else if(S.includes("zsh"))A=".zshrc";else E=!1;if(!E)return N.error(`Shell not supported yet. Add this manually to your ~/.<shell>rc file:

`+w);let u=O.readFileSync(a(i,A),"utf-8");if(u.includes(w))return N.success("Done! Restart your shell for the changes to take effect!");return u+=`

`+w+`
`,O.writeFileSync(a(i,A),u),N.success("Done! Restart your shell for the changes to take effect!")}if(t=="win32"){let i=X()||process.env.USERPROFILE,S="";for(let{name:l,cmd:g}of m)S+=`function ${l} { ${g} }
`;O.writeFileSync(a(r,"aliases.ps1"),S);let{stdout:b,stderr:w}=await or('powershell.exe -Command "$PROFILE"');b=b.replace("\r","").replace(`
`,"");let E=b.replace(i,"").split("\\"),u=i;for(let l of E){if(l=="")continue;if(l.replace("\r","").replace(`
`,"").endsWith(".ps1"))continue;if(!j(a(u,l)))W(a(u,l));u=a(u,l)}let T=j(b),J="";if(T)J=O.readFileSync(b,"utf-8");return J+=`

. ${a(r,"aliases.ps1")}
`,O.writeFileSync(b,J),N.success("Done! Restart your shell for the changes to take effect!")}})};import{join as D}from"node:path";import U from"node:fs";import{existsSync as B,mkdirSync as ar}from"node:fs";import{log as F}from"@clack/prompts";var _=(n)=>{n.command("remove [name]","Remove an alias by name",(s)=>{return s.positional("name",{describe:"Name of the alias"})},(s)=>{let{name:t}=s,r=o();if(!r)return F.error("Invalid OS.");if(!B(r))ar(r);if(!B(D(r,"aliases.json")))U.writeFileSync(D(r,"aliases.json"),JSON.stringify([]));let m=JSON.parse(U.readFileSync(D(r,"aliases.json"),"utf-8")).filter((i)=>i.name!=t);return U.writeFileSync(D(r,"aliases.json"),JSON.stringify(m)),F.success("Removed alias!")})};import{join as $}from"node:path";import C from"node:fs";import{existsSync as v,mkdirSync as fr}from"node:fs";import Sr from"cli-table";import{log as c}from"@clack/prompts";var P=(n)=>{n.command("list","List all aliases",(s)=>{return s},(s)=>{let t=o();if(!t)return c.error("Invalid OS.");if(!v(t))fr(t);if(!v($(t,"aliases.json")))C.writeFileSync($(t,"aliases.json"),JSON.stringify([]));let r=JSON.parse(C.readFileSync($(t,"aliases.json"),"utf-8")),e=new Sr({head:["Name","Command","Enabled?"]});for(let m of r)e.push([m.name,m.cmd,m.enabled?"Yes":"No"]);return c.success(e.toString())})};import{join as L}from"node:path";import q from"node:fs";import{existsSync as k,mkdirSync as br}from"node:fs";import{log as z}from"@clack/prompts";var y=(n)=>{n.command("enable [name] [command]","Enable an alias",(s)=>{return s.positional("name",{describe:"Name of the alias"})},(s)=>{let{name:t}=s,r=o();if(!r)return z.error("Invalid OS.");if(!k(r))br(r);if(!k(L(r,"aliases.json")))q.writeFileSync(L(r,"aliases.json"),JSON.stringify([]));let e=JSON.parse(q.readFileSync(L(r,"aliases.json"),"utf-8")),m=-1;for(let i in e)if(e[i].name==t)m=parseInt(i);if(m==-1)return z.error("Alias could not be found. Aborting...");return e[m].enabled=!0,q.writeFileSync(L(r,"aliases.json"),JSON.stringify(e)),z.success("Enabled alias!")})};import{join as R}from"node:path";import G from"node:fs";import{existsSync as d,mkdirSync as ur}from"node:fs";import{log as H}from"@clack/prompts";var h=(n)=>{n.command("disable [name] [command]","Disable an alias",(s)=>{return s.positional("name",{describe:"Name of the alias"})},(s)=>{let{name:t}=s,r=o();if(!r)return H.error("Invalid OS.");if(!d(r))ur(r);if(!d(R(r,"aliases.json")))G.writeFileSync(R(r,"aliases.json"),JSON.stringify([]));let e=JSON.parse(G.readFileSync(R(r,"aliases.json"),"utf-8")),m=-1;for(let i in e)if(e[i].name==t)m=parseInt(i);if(m==-1)return H.error("Alias could not be found. Aborting...");return e[m].enabled=!1,G.writeFileSync(R(r,"aliases.json"),JSON.stringify(e)),H.success("Disabled alias!")})};var Ar="0.0.4";Nr(`${K.bold.green("alias-mngr")} ${K.gray("(v"+Ar+")")} by ${K.bold("Exerra")}`);var f=Or(lr(process.argv));f.demandCommand();V(f);_(f);Z(f);P(f);y(f);h(f);f.scriptName("alias-mngr");f.example('$0 add v "open \\$1 -a \\"Visual Studio Code\\""',"");f.help("h");f.alias("h","help");f.parse();
